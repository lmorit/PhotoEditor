apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    namespace 'ja.burhanrashid52.photoeditor'
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
        failOnError false
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.core:core-ktx:1.13.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    testImplementation 'androidx.test:core-ktx:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.12.2'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'

    testImplementation 'org.mockito:mockito-core:5.1.1'
    androidTestImplementation 'org.mockito:mockito-android:5.1.1'
}

def isCi = System.getenv("JITPACK") != null || System.getenv("CI") != null
def pubGroup = project.findProperty("group") ?: "com.github.lmorit.PhotoEditor"
def pubVersion = project.findProperty("version") ?: "a0034c1"

publishing {
    publications {
        create("release", MavenPublication) {
            groupId = pubGroup
            artifactId = "photoeditor"
            version = pubVersion
            afterEvaluate { from components.release }
        }
    }
}

signing { required !isCi }
tasks.withType(Sign).configureEach { onlyIf { !isCi } }